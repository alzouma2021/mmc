<?xml version="1.0" encoding="UTF-8"?>
<!--
    JBoss, Home of Professional Open Source
    Copyright 2015, Red Hat, Inc. and/or its affiliates, and individual
    contributors by the @authors tag. See the copyright.txt in the
    distribution for a full listing of individual contributors.

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at
    http://www.apache.org/licenses/LICENSE-2.0
    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.
-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd" >
    <modelVersion>4.0.0</modelVersion>
    
    
    <groupId>com.siliconwise</groupId>
    <!-- <artifactId>${project.artifactPrefix}-parent</artifactId> -->
    <artifactId>mmc-parent</artifactId>
    <version>1.0</version>
    <packaging>pom</packaging>
    <name>mmc</name>
    <description>mmc midlleware project</description>

    <licenses>
        <license>
            <name>Apache License, Version 2.0</name>
            <url>http://www.apache.org/licenses/LICENSE-2.0.html</url>
            <distribution>repo</distribution>
        </license>
    </licenses>
    
    <modules>
        <module>ejb</module>
        <module>web</module>
        <module>ear</module>
    </modules>
   
	<properties>
	
	    <!-- Project identification -->
	    
		<project.groupId>com.siliconwise</project.groupId>
		<project.artifactPrefix>mmc</project.artifactPrefix>
		<project.version>1.0</project.version>
		
		<!-- Wildfly server properties -->
		
		<version.server.bom>21.0.2.Final</version.server.bom>
		<version.wildfly.maven.plugin>2.0.2.Final</version.wildfly.maven.plugin>
		<version.wildfly>21.0.2.Final</version.wildfly>
		
		<!-- The full remote maven repo URL; can be overridden via -D for special use cases -->
        <maven.repository.url>${maven.repository.protocol}://repository.jboss.org/nexus/content/groups/public/</maven.repository.url> 
      
        <!-- https://access.redhat.com/maven-repository -->
        <maven.redhat.repository.url>${maven.repository.protocol}://maven.repository.redhat.com/ga/</maven.redhat.repository.url>
        
        <!-- maven-compiler-plugin  -->
        <maven.compiler.target>1.8</maven.compiler.target>
        <maven.compiler.source>1.8</maven.compiler.source>
   		<!-- <maven.compiler.release>11</maven.compiler.release>  -->
   		
   		<version.slf4j>1.7.30</version.slf4j>
   		<version.unbescape>1.1.6.RELEASE</version.unbescape>
   		
   		
	</properties>
	
	<repositories>
        <repository>
            <releases>
                <enabled>true</enabled>
                <updatePolicy>never</updatePolicy>
            </releases>
            <snapshots>
                <enabled>true</enabled>
                <updatePolicy>never</updatePolicy>
            </snapshots>
            <id>jboss-public-repository-group</id>
            <name>JBoss Public Repository Group</name>
            <url>${maven.repository.url}</url>
            <layout>default</layout>
        </repository>
        <repository>
            <releases>
                <enabled>true</enabled>
                <updatePolicy>never</updatePolicy>
            </releases>
            <snapshots>
                <enabled>true</enabled>
                <updatePolicy>never</updatePolicy>
            </snapshots>
            <id>jboss-enterprise-maven-repository</id>
            <name>JBoss Enterprise Maven Repository</name>
            <url>${maven.redhat.repository.url}</url>
            <layout>default</layout>
        </repository>
    </repositories>
    
    <pluginRepositories>
        <pluginRepository>
            <releases>
                <enabled>true</enabled>
            </releases>
            <snapshots>
                <enabled>true</enabled>
            </snapshots>
            <id>jboss-public-repository-group</id>
            <name>JBoss Public Repository Group</name>
            <url>${maven.repository.url}</url>
        </pluginRepository>
        <pluginRepository>
            <releases>
                <enabled>true</enabled>
            </releases>
            <snapshots>
                <enabled>true</enabled>
            </snapshots>
            <id>jboss-enterprise-maven-repository</id>
            <name>JBoss Enterprise Maven Repository</name>
            <url>${maven.redhat.repository.url}</url>
        </pluginRepository>
    </pluginRepositories>
    
    <dependencyManagement>
        <dependencies>
            <!-- Define the version of the EJB jar so that we don't need
                to repeat ourselves in every module -->
            <dependency>
                <groupId>com.siliconwise</groupId>
                <artifactId>mmc-ejb</artifactId>
                <version>1.0</version>
                <type>ejb</type>
            </dependency>

            <!-- Define the version of the WAR so that we don't need to repeat
                ourselves in every module -->
            <dependency>
                <groupId>com.siliconwise</groupId>
                <artifactId>mmc-web</artifactId>
                <version>1.0</version>
                <type>war</type>
                <scope>compile</scope>
            </dependency>
			<!-- importing the jakartaee8-with-tools BOM adds specs and other useful artifacts as managed dependencies -->
            <dependency>
                <groupId>org.wildfly.bom</groupId>
                <artifactId>wildfly-jakartaee8-with-tools</artifactId>
                <version>${version.server.bom}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            
        </dependencies>
    </dependencyManagement>
    
    <dependencies>
    
    
        <!-- Import the CDI API, we use provided scope as the API is included in JBoss EAP -->
        <dependency>
            <groupId>jakarta.enterprise</groupId>
            <artifactId>jakarta.enterprise.cdi-api</artifactId>
            <scope>provided</scope>
        </dependency>

        <!-- Import the Common Annotations API (JSR-250), we use provided scope
            as the API is included in JBoss EAP -->
        <dependency>
            <groupId>org.jboss.spec.javax.annotation</groupId>
            <artifactId>jboss-annotations-api_1.3_spec</artifactId>
            <scope>provided</scope>
        </dependency>

        <!-- Import the EJB API, we use provided scope as the API is included in JBoss EAP -->
        <dependency>
            <groupId>org.jboss.spec.javax.ejb</groupId>
            <artifactId>jboss-ejb-api_3.2_spec</artifactId>
            <scope>provided</scope>
        </dependency>
        
   		<dependency>
            <groupId>org.jboss.spec.javax.xml.bind</groupId>
            <artifactId>jboss-jaxb-api_2.3_spec</artifactId>
            <scope>provided</scope>
        </dependency>
    
		<!-- Database persistency -->
		
        <!-- Bean Validation Implementation 
             Provides portable constraints such as @Email 
             Hibernate Validator is shipped in JBoss EAP -->
        <dependency>
            <groupId>org.hibernate.validator</groupId>
            <artifactId>hibernate-validator</artifactId>
            <scope>provided</scope>
        </dependency>
        
        <!-- hibernate-validator dependencies excluded on server dependency management yet required -->
        <dependency>
            <groupId>jakarta.validation</groupId>
            <artifactId>jakarta.validation-api</artifactId>
            <scope>provided</scope>
        </dependency>

        <!-- Import the JPA API, we use provided scope as the API is included in JBoss EAP -->
        <dependency>
            <groupId>jakarta.persistence</groupId>
            <artifactId>jakarta.persistence-api</artifactId>
            <scope>provided</scope>
        </dependency>
    
    	<!-- REST API -->
        <dependency>
        	<groupId>org.jboss.resteasy</groupId>
        	<artifactId>resteasy-jaxrs</artifactId>
        	<scope>provided</scope>
    	</dependency>
        
        <!-- RESTEasy plugin to use JSON-P as a provider -->
        <dependency>
            <groupId>org.jboss.resteasy</groupId>
            <artifactId>resteasy-json-p-provider</artifactId>
         	<!-- <version>${resteasy.version}</version>-->
        	<scope>provided</scope>
        </dependency>
        
        <dependency>
		    <groupId>org.jboss.resteasy</groupId>
		    <artifactId>resteasy-jaxb-provider</artifactId>
		    <scope>provided</scope>
		</dependency>
            
    	<!-- Test -->
        <!-- Test scope dependencies -->
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <scope>test</scope>
        </dependency> 
        
        <!-- https://mvnrepository.com/artifact/org.junit.jupiter/junit-jupiter-engine -->
		<dependency>
		    <groupId>org.junit.jupiter</groupId>
		    <artifactId>junit-jupiter-engine</artifactId>
		    <version>5.8.0-M1</version>
		    <scope>test</scope>
		</dependency>
		
		<!-- https://mvnrepository.com/artifact/org.junit.jupiter/junit-jupiter-api -->
		<dependency>
		    <groupId>org.junit.jupiter</groupId>
		    <artifactId>junit-jupiter-api</artifactId>
		    <version>5.8.0-M1</version>
		    <scope>test</scope>
		</dependency>
		
        <!-- Optional, but highly recommended -->
        <!-- Arquillian allows you to test enterprise code such as EJBs and
            Transactional(JTA) JPA from JUnit/TestNG -->
        <dependency>
            <groupId>org.jboss.arquillian.junit</groupId>
            <artifactId>arquillian-junit-container</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.jboss.arquillian.protocol</groupId>
            <artifactId>arquillian-protocol-servlet</artifactId>
            <scope>test</scope>
        </dependency>
        
        <!-- https://mvnrepository.com/artifact/org.wildfly.arquillian/wildfly-arquillian-container-managed -->
		<dependency>
		    <groupId>org.wildfly.arquillian</groupId>
		    <artifactId>wildfly-arquillian-container-managed</artifactId>
		    <scope>test</scope>
		</dependency>
		
		<!-- https://mvnrepository.com/artifact/org.jboss.arquillian.extension/arquillian-persistence-dbunit -->
		<dependency>
		    <groupId>org.jboss.arquillian.extension</groupId>
		    <artifactId>arquillian-persistence-dbunit</artifactId>
		    <version>1.0.0.Alpha7</version>
		    <scope>test</scope>
		</dependency>
		
        <!-- Misceleanous dependencies -->
		<dependency> 
  			<groupId>org.slf4j</groupId>
   			<artifactId>slf4j-api</artifactId>
  			<scope>provided</scope>
		</dependency>
      
		<dependency>
			<groupId>org.unbescape</groupId>
			<artifactId>unbescape</artifactId>
			<version>${version.unbescape}</version>
			<scope>compile</scope>
		</dependency>
		
		<!-- https://mvnrepository.com/artifact/javax.servlet/javax.servlet-api -->
		<dependency>
		    <groupId>javax.servlet</groupId>
		    <artifactId>javax.servlet-api</artifactId>
		    <version>4.0.1</version>
		    <scope>provided</scope>
		</dependency>
				
    	<!-- https://mvnrepository.com/artifact/org.jboss.spec.javax.interceptor/jboss-interceptors-api_1.2_spec -->
		<dependency>
		    <groupId>org.jboss.spec.javax.interceptor</groupId>
		    <artifactId>jboss-interceptors-api_1.2_spec</artifactId>
		  	<!-- <version>2.0.0.Final</version> --> 
		    <scope>provided</scope>
		</dependency>

    	<!-- https://mvnrepository.com/artifact/io.swagger.core.v3/swagger-annotations -->
		<dependency>
      		<groupId>io.swagger.core.v3</groupId>
      		<artifactId>swagger-jaxrs2</artifactId>
      		<version>2.1.2</version>
   		</dependency>
   		<dependency>
      		<groupId>io.swagger.core.v3</groupId>
      		<artifactId>swagger-jaxrs2-servlet-initializer-v2</artifactId>
     		<version>2.1.2</version>
   		</dependency>
		
		<!-- https://mvnrepository.com/artifact/com.maxmind.geoip2/geoip2 -->
		<dependency>
		    <groupId>com.maxmind.geoip2</groupId>
		    <artifactId>geoip2</artifactId>
		    <version>2.15.0</version>
		</dependency>
		
		<!-- https://mvnrepository.com/artifact/org.apache.shiro/shiro-core -->
		<dependency>
		    <groupId>org.apache.shiro</groupId>
		    <artifactId>shiro-core</artifactId>
		    <version>1.7.1</version>
		</dependency>
		
		<!-- https://mvnrepository.com/artifact/com.auth0/java-jwt -->
		<dependency>
		    <groupId>com.auth0</groupId>
		    <artifactId>java-jwt</artifactId>
		    <version>3.12.1</version>
		</dependency>
		
		<!-- https://mvnrepository.com/artifact/io.jsonwebtoken/jjwt -->
		<dependency>
		    <groupId>io.jsonwebtoken</groupId>
		    <artifactId>jjwt</artifactId>
		    <version>0.9.1</version>
		</dependency>
		
		<!-- OR as a snazzy new standalone jar with shaded dependencies -->
		<dependency>
		    <groupId>com.konghq</groupId>
		    <artifactId>unirest-java</artifactId>
		    <version>3.11.09</version>
		    <classifier>standalone</classifier>
		</dependency>
		
		<!-- https://mvnrepository.com/artifact/javax.mail/mail -->
		<dependency>
		    <groupId>javax.mail</groupId>
		    <artifactId>mail</artifactId>
		    <version>1.4.3</version>
		</dependency>
		
		<dependency>
			<groupId>com.google.api-client</groupId>
			<artifactId>google-api-client</artifactId>
			<version>1.31.5</version>
		</dependency>

		<!-- https://mvnrepository.com/artifact/com.restfb/restfb -->
		<dependency>
		    <groupId>com.restfb</groupId>
		    <artifactId>restfb</artifactId>
		    <version>3.13.0</version>
		</dependency>

    </dependencies>

    <build>
        <plugins>
            <!-- The WildFly plug-in deploys your ear to a local JBoss EAP container. 
                Due to Maven's lack of intelligence with EARs we need to configure
                the WildFly Maven plug-in to skip deployment for all modules. We then enable
                it specifically in the ear module. -->
            <plugin>
                <groupId>org.wildfly.plugins</groupId>
                <artifactId>wildfly-maven-plugin</artifactId>
                <version>${version.wildfly.maven.plugin}</version>
                <configuration>
                    <skip>true</skip>
                </configuration>
            </plugin>
            <plugin>
        		<groupId>org.apache.maven.plugins</groupId>
        		<artifactId>maven-ejb-plugin</artifactId>
        		<version>3.1.0</version>
        		<configuration>
            		<ejbVersion>3.0</ejbVersion>
       		  	</configuration>
    	    </plugin>
    	    <plugin>
    			<artifactId>maven-war-plugin</artifactId>
    			<version>3.2.3</version>
    			<configuration>
       				 <failOnMissingWebXml>false</failOnMissingWebXml>
    			</configuration>
			</plugin>
        </plugins>
    </build>
</project>
